["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$go","~$cljs.core.async","~$alt!","^4","~$go-loop","^4"],"~:excludes",["~#set",["~$loop"]],"~:name","~$cljs.user","~:imports",["^ ","~$EventType","~$goog.events.EventType"],"~:requires",["^ ","~$gevents","~$goog.events","~$goog.dom","^B","~$ll.spec","~$lemon.lime.spec","~$lemon.lime.css","^E","^=","^>","^4","^4","~$cljs.core.async.impl.protocols","^F","~$cljs.pprint","^G","~$css","^E","~$gdom","^B","~$lemon.lime","^J","~$s","~$cljs.spec.alpha","~$ll","^J","^K","^K","^A","^A","^D","^D","~$ig","~$integrant.core","^N","^N"],"~:cljs.spec/speced-vars",["~$cljs.user/reset","~$cljs.user/loop-until","~$cljs.user/ping-pong","~$cljs.user/play","~$cljs.user/loop"],"~:uses",["^ ","~$timeout","^4","~$<!","^4","~$chan","^4","~$ReadPort","^F","~$put!","^4","~$WritePort","^F"],"~:defs",["^ ","~$play",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","~:line",78,"~:column",7,"~:end-line",78,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^1:",[["~$sprite","~$&",["^ ","~:keys",["~$to"],"~:as","~$animation"]]]]]],"~:doc","Animate through a range of frames and then stop","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^1:",["^1<",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"~:arglists-meta",["^1:",[null]]]],"^:","^S","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",11,"^1B",["^ ","^1C",true,"^1D",1,"^1E",1,"^1F",[["^1:",["^1<",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^1<",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"~:protocol-impl",null,"^1D",1,"^1G",["^1:",[null]],"^16",1,"^1C",true,"~:methods",[["^ ","^1D",1,"^1C",true,"~:tag","~$any"]],"^15",78,"~:ret-tag","^1K","^17",78,"^1E",1,"~:fn-var",true,"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1>"],"^1?","^1@"]]]],"^1A","Animate through a range of frames and then stop"],"~$loop-until",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",40,"^16",7,"^17",40,"^18",17,"^19",["^1:",["^1;",["^1:",[["^1<",["^ ","^1=",["~$from","^1>","~$duration","~$done"],"~:or",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]],"~$pred"]]]]],"^1A","An animation primitive. Given an animation map, loop until the given pred is true."],"^:","^Q","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",17,"^1F",["^1:",[["^1<","~$p__2560","^1S"]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",40,"^1L","^1K","^17",40,"^1E",3,"^1M",true,"^19",["^1:",["^1;",["^1:",[["^1<",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]],"^1S"]]]]],"^1A","An animation primitive. Given an animation map, loop until the given pred is true."],"~$activate",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",124,"^16",7,"^17",124,"^18",15,"^19",["^1:",["^1;",["^1:",[["~$pedestal","^1Q"]]]]],"^1A","Bring forth the power of the pedestal! Accepts a done channel used to control\n   when the pedestal stops"],"^:","~$cljs.user/activate","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",15,"^1F",["^1:",[["^1V","^1Q"]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",124,"^1L","^1K","^17",124,"^1E",2,"^1M",true,"^19",["^1:",["^1;",["^1:",[["^1V","^1Q"]]]]],"^1A","Bring forth the power of the pedestal! Accepts a done channel used to control\n   when the pedestal stops"],"~$disable",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",181,"^16",7,"^17",181,"^18",14,"^19",["^1:",["^1;",["^1:",[["~$&","~$elems"]]]]],"^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^1Y"]]],"^19",["^1:",[["~$&","^1Y"]]],"^1G",["^1:",[null]]]],"^:","~$cljs.user/disable","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",14,"^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^1Y"]]],"^19",["^1:",[["~$&","^1Y"]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^1Y"]]],"^1H",null,"^1D",0,"^1G",["^1:",[null]],"^16",1,"^1C",true,"^1I",[["^ ","^1D",0,"^1C",true,"^1J","~$clj-nil"]],"^15",181,"^1L","^1K","^17",181,"^1E",0,"^1M",true,"^19",["^1:",[["~$&","^1Y"]]]],"~$enable",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",186,"^16",7,"^17",186,"^18",13,"^19",["^1:",["^1;",["^1:",[["~$&","^1Y"]]]]],"^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^1Y"]]],"^19",["^1:",[["~$&","^1Y"]]],"^1G",["^1:",[null]]]],"^:","~$cljs.user/enable","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",13,"^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^1Y"]]],"^19",["^1:",[["~$&","^1Y"]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^1Y"]]],"^1H",null,"^1D",0,"^1G",["^1:",[null]],"^16",1,"^1C",true,"^1I",[["^ ","^1D",0,"^1C",true,"^1J","^1["]],"^15",186,"^1L","^1K","^17",186,"^1E",0,"^1M",true,"^19",["^1:",[["~$&","^1Y"]]]],"~$restart",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",223,"^16",7,"^17",223,"^18",14,"^19",["^1:",["^1;",["^1:",[[]]]]]],"^:","~$cljs.user/restart","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",14,"^1F",["^1:",[[]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",223,"^1L",["^8",[null,"^1K"]],"^17",223,"^1E",0,"^1M",true,"^19",["^1:",["^1;",["^1:",[[]]]]]],"~$reset",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",68,"^16",7,"^17",68,"^18",12,"^19",["^1:",["^1;",["^1:",[["~$&","~$sprites"]]]]],"^1A","Reset the sprite to a frame","^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^25"]]],"^19",["^1:",[["~$&","^25"]]],"^1G",["^1:",[null]]]],"^:","^P","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",12,"^1B",["^ ","^1C",true,"^1D",0,"^1E",0,"^1F",[["^1:",["^25"]]],"^19",["^1:",[["~$&","^25"]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^25"]]],"^1H",null,"^1D",0,"^1G",["^1:",[null]],"^16",1,"^1C",true,"^1I",[["^ ","^1D",0,"^1C",true,"^1J","^1["]],"^15",68,"^1L","^1K","^17",68,"^1E",0,"^1M",true,"^19",["^1:",[["~$&","^25"]]],"^1A","Reset the sprite to a frame"],"~$config",["^ ","^:","~$cljs.user/config","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",139,"^16",1,"^17",139,"^18",12,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",139,"^16",6,"^17",139,"^18",12],"^1J","~$cljs.core/IMap"],"~$start",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",211,"^16",7,"^17",211,"^18",12,"^19",["^1:",["^1;",["^1:",[[]]]]],"^1A","Start the system by populating controls and wiring up event listeners"],"^:","~$cljs.user/start","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",12,"^1F",["^1:",[[]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",211,"^1L",["^8",[null,"^1K"]],"^17",211,"^1E",0,"^1M",true,"^19",["^1:",["^1;",["^1:",[[]]]]],"^1A","Start the system by populating controls and wiring up event listeners"],"~$play-scene",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",132,"^16",7,"^17",132,"^18",17,"^19",["^1:",["^1;",["^1:",[["~$shepherd","^1V","^1Q"]]]]],"^1A","Let our shepherd activate the powers of the pedestal"],"^:","~$cljs.user/play-scene","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",17,"^1F",["^1:",[["^2<","^1V","^1Q"]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",132,"^1L","^1K","^17",132,"^1E",3,"^1M",true,"^19",["^1:",["^1;",["^1:",[["^2<","^1V","^1Q"]]]]],"^1A","Let our shepherd activate the powers of the pedestal"],"~$*system",["^ ","^:","~$cljs.user/*system","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",209,"^16",1,"^17",209,"^18",17,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",209,"^16",10,"^17",209,"^18",17],"^1J","~$cljs.core/Atom"],"^9",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",59,"^16",7,"^17",59,"^18",11,"^19",["^1:",["^1;",["^1:",[["^1<","~$&",["^ ","^1?","^1@"]]]]]],"^1A","Loop forever. A done channel should be given here if you want to be able to kill it","^1B",["^ ","^1C",true,"^1D",1,"^1E",1,"^1F",[["^1:",["^1<",["^ ","^1?","^1@"]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1?","^1@"]]]],"^1G",["^1:",[null]]]],"^:","^T","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",11,"^1B",["^ ","^1C",true,"^1D",1,"^1E",1,"^1F",[["^1:",["^1<",["^ ","^1?","^1@"]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1?","^1@"]]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^1<",["^ ","^1?","^1@"]]]],"^1H",null,"^1D",1,"^1G",["^1:",[null]],"^16",1,"^1C",true,"^1I",[["^ ","^1D",1,"^1C",true,"^1J","^1K"]],"^15",59,"^1L","^1K","^17",59,"^1E",1,"^1M",true,"^19",["^1:",[["^1<","~$&",["^ ","^1?","^1@"]]]],"^1A","Loop forever. A done channel should be given here if you want to be able to kill it"],"~$ping-pong",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",88,"^16",7,"^17",88,"^18",16,"^19",["^1:",["^1;",["^1:",[["^1<","~$&",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]]]],"^1A","Animate back and forth between two frames","^1B",["^ ","^1C",true,"^1D",1,"^1E",1,"^1F",[["^1:",["^1<",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^1G",["^1:",[null]]]],"^:","^R","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",16,"^1B",["^ ","^1C",true,"^1D",1,"^1E",1,"^1F",[["^1:",["^1<",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^1G",["^1:",[null]]],"^1F",[["^1:",["^1<",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^1H",null,"^1D",1,"^1G",["^1:",[null]],"^16",1,"^1C",true,"^1I",[["^ ","^1D",1,"^1C",true,"^1J","^1K"]],"^15",88,"^1L","^1K","^17",88,"^1E",1,"^1M",true,"^19",["^1:",[["^1<","~$&",["^ ","^1=",["^1O","^1>","^1P","^1Q"],"^1R",["^ ","^1P",80,"^1Q",["^1:",["^X"]]]]]]],"^1A","Animate back and forth between two frames"],"~$stop",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",216,"^16",7,"^17",216,"^18",11,"^19",["^1:",["^1;",["^1:",[[]]]]],"^1A","Stop the system. Removes event listeners and closes channels"],"^:","~$cljs.user/stop","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",11,"^1F",["^1:",[[]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",216,"^1L",["^8",["~$cljs.core/Keyword","^1["]],"^17",216,"^1E",0,"^1M",true,"^19",["^1:",["^1;",["^1:",[[]]]]],"^1A","Stop the system. Removes event listeners and closes channels"],"~$swing",["^ ","^12",null,"^13",["^ ","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^15",113,"^16",7,"^17",113,"^18",12,"^19",["^1:",["^1;",["^1:",[["^2<","~$on-contact"]]]]],"^1A","Swing mighty shepherd! The on-contact function will be called\n   with 0 arugmnets when the shepherd reaches the 6th frame, the frame\n   where his crook \"makes contact\""],"^:","~$cljs.user/swing","^14","/Users/brian/projects/lemon-lime/dev/cljs/user.cljs","^18",12,"^1F",["^1:",[["^2<","^2F"]]],"^1H",null,"^1G",["^1:",[null,null]],"^16",1,"^1C",false,"^15",113,"^1L","^1K","^17",113,"^1E",2,"^1M",true,"^19",["^1:",["^1;",["^1:",[["^2<","^2F"]]]]],"^1A","Swing mighty shepherd! The on-contact function will be called\n   with 0 arugmnets when the shepherd reaches the 6th frame, the frame\n   where his crook \"makes contact\""]],"~:cljs.spec/registry-ref",[["^P",["^1:",["~$cljs.spec.alpha/fspec","~:args",["^1:",["~$cljs.spec.alpha/cat","~:sprites",["^1:",["~$cljs.spec.alpha/+","~:lemon.lime.spec/sprite"]]]],"~:ret","^2N"]]],["^Q",["^1:",["^2I","^2J",["^1:",["^2K","~:sprite","^2N","~:animation","~:cljs.user/animation","~:pred","~:cljs.user/pred"]],"^2O","~:cljs.user/process"]]],["~:cljs.user/to","~:lemon.lime.spec/frame"],["~:cljs.user/done",["^1:",["~$cljs.core/fn",["~$%"],["^1:",["~$cljs.core/satisfies?","~$cljs.core.async.impl.protocols/WritePort","~$%"]]]]],["~:cljs.user/from","^2W"],["^R",["^1:",["^2I","^2J",["^1:",["^2K","^2P","^2N","^2Q","^2R"]],"^2O","^2U"]]],["~:cljs.user/duration","~$cljs.core/nat-int?"],["^2U",["^1:",["^2Y",["~$%"],["^1:",["^2Z","~$cljs.core.async.impl.protocols/ReadPort","~$%"]]]]],["^S",["^1:",["^2I","^2J",["^1:",["^2K","^2P","^2N","^2Q","^2R"]],"^2O","^2U"]]],["^2R",["^1:",["~$cljs.spec.alpha/keys","~:req-un",["^30","^2V"],"~:opt-un",["^31","^2X"]]]],["^2T",["^1:",["^2I","^2J",["^1:",["^2K","^2P","^2N","~:frame","^2W"]],"^2O","~$cljs.core/boolean?"]]],["^T",["^1:",["^2I","^2J",["^1:",["^2K","^2P","^2N","^2Q","^2R"]],"^2O","^2U"]]]],"~:require-macros",["^ ","^G","^G","^4","^4","~$s","^K","^K","^K"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["^2J","~:ui/controls","^35","^36","^38","^2M","^2O","~:gfn","~:pred-exprs","~:keys-pred","~:sprite/pedestal","~:done","^2Q","^P","^37","~:opt-keys","^2S","^2Z","~:continue","^2N","^2K","~:default","^Q","^2V","~:animation/done","~:pedestal","~:req-specs","~:width","^2X","^30","^2I","~:recur","~:duration","^2[","^2W","~$cljs.core/contains?","~$cljs.core/map?","^33","~$%","~:renderer","^2P","^34","~:stopped","^R","~:req","~:sprite/renderer","~:lemon.lime.css/renderer","^31","^2U","~:cljs.user/contact","~:from","~:id","^32","~:sprite/shepherd","~:req-keys","^2Y","~:opt-specs","~:pred-forms","^S","~:uri","~:shepherd","~:play","^2R","^2L","^2T","~:animation/play","~:height","^T","~:opt","~:to"]],"~:order",["^30","^2W","^2V","^31","^32","^2X","^2Y","~$%","^2Z","^2[","^2R","^34","^35","^36","^3=","^3>","^3?","^3B","^3G","^3O","^3V","^3W","^3X","^42","^3S","^43","^3J","^3A","^3L","^3K","^2T","^2I","^2J","^2K","^2P","^2N","^37","^2O","^38","^2U","^33","^3I","^3D","^3C","^Q","^2Q","^2S","^T","^P","^2L","^2M","^S","^R","^3R","^3P","^3@","^3U","^3E","^40","^3<","^3Y","^41","^3H","^3Q","^3M","^3T","^3Z","^3F","^3[","^3N"]],"^1A","lemon.lime provides a framework for loading and iterating over sprite frames in\n   a stateful way. A lemon.lime sprite is a tiny state machine that is transitioned via\n   lemon.lime functions. An end user can animate lemon.lime sprites any way they see fit.\n   \n   The examples within this namespace demonstrate one possible way to accomplish this using core.async."]