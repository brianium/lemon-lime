["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fsm.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$StateMachine",["^ ","~:meta",["^ ","~:protocol-symbol",true,"~:file","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","~:end-column",26,"~:column",14,"~:line",4,"~:protocol-info",["^ ","~:methods",["^ ","~$-add-effect",[["~$_","~$key","~$fn-3"]],"~$-transition",[["~$_","~$event","~$payload"]],"~$-current-state",[["~$_"]]]],"~:end-line",4,"~:sigs",["^ ","~:-add-effect",["^ ","^5","^E","~:arglists",["~#list",[["~$_","^F","^G"]]],"~:doc","Add a side effect that is invoked when a change to state happens. Is called with the state machine, previous, and next state"],"~:-transition",["^ ","^5","^H","^O",["^P",[["~$_","^I","^J"]]],"^Q","Transition the state machine to a new state"],"~:-current-state",["^ ","^5","^K","^O",["^P",[["~$_"]]],"^Q","Return the current state of the state machine"]],"~:jsdoc",["^P",["@interface"]]],"^>",true,"^5","~$fsm.protocols/StateMachine","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^@",26,"^A",1,"^B",4,"^C",["^ ","^D",["^ ","^E",[["~$_","^F","^G"]],"^H",[["~$_","^I","^J"]],"^K",[["~$_"]]]],"~:info",null,"^L",4,"~:tag","~$any","^M",["^ ","^N",["^ ","^5","^E","^O",["^P",[["~$_","^F","^G"]]],"^Q","Add a side effect that is invoked when a change to state happens. Is called with the state machine, previous, and next state"],"^R",["^ ","^5","^H","^O",["^P",[["~$_","^I","^J"]]],"^Q","Transition the state machine to a new state"],"^S",["^ ","^5","^K","^O",["^P",[["~$_"]]],"^Q","Return the current state of the state machine"]],"~:impls",["^4",[]],"^T",["^P",["@interface"]]],"^E",["^ ","~:protocol-inline",null,"^=",["^ ","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^B",5,"^A",4,"^L",5,"^@",15,"~:protocol","^U","^Q","Add a side effect that is invoked when a change to state happens. Is called with the state machine, previous, and next state","^O",["^P",["~$quote",["^P",[["~$_","^F","^G"]]]]]],"^[","^U","^5","~$fsm.protocols/-add-effect","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^@",15,"~:method-params",["^P",[["~$_","^F","^G"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^A",1,"~:variadic?",false,"^B",4,"~:ret-tag","^X","^L",5,"~:max-fixed-arity",3,"~:fn-var",true,"^O",["^P",["^10",["^P",[["~$_","^F","^G"]]]]],"^Q","Add a side effect that is invoked when a change to state happens. Is called with the state machine, previous, and next state"],"^H",["^ ","^Z",null,"^=",["^ ","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^B",6,"^A",4,"^L",6,"^@",15,"^[","^U","^Q","Transition the state machine to a new state","^O",["^P",["^10",["^P",[["~$_","^I","^J"]]]]]],"^[","^U","^5","~$fsm.protocols/-transition","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^@",15,"^12",["^P",[["~$_","^I","^J"]]],"^13",null,"^14",["^P",[null,null]],"^A",1,"^15",false,"^B",4,"^16","^X","^L",6,"^17",3,"^18",true,"^O",["^P",["^10",["^P",[["~$_","^I","^J"]]]]],"^Q","Transition the state machine to a new state"],"^K",["^ ","^Z",null,"^=",["^ ","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^B",7,"^A",4,"^L",7,"^@",18,"^[","^U","^Q","Return the current state of the state machine","^O",["^P",["^10",["^P",[["~$_"]]]]]],"^[","^U","^5","~$fsm.protocols/-current-state","^?","/Users/brian/.cljs/.aot_cache/1.11.4/2133771/fsm/protocols.cljc","^@",18,"^12",["^P",[["~$_"]]],"^13",null,"^14",["^P",[null,null]],"^A",1,"^15",false,"^B",4,"^16","^X","^L",7,"^17",1,"^18",true,"^O",["^P",["^10",["^P",[["~$_"]]]]],"^Q","Return the current state of the state machine"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^Q","Contains fsm protocol(s)"]