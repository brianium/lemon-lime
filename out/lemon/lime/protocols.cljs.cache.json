["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$lemon.lime.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$Renderer",["^ ","~:meta",["^ ","~:protocol-symbol",true,"~:file","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","~:end-column",22,"~:column",14,"~:line",3,"~:protocol-info",["^ ","~:methods",["^ ","~$-load",[["~$self","~$sprite"]],"~$-render",[["^F","^G","~$options"]]]],"~:end-line",3,"~:sigs",["^ ","~:-load",["^ ","^5","^E","~:arglists",["~#list",[["^F","^G"]]],"~:doc","Load the sprite and put it into a :lemon.lime/loaded state. Sets :sprite-sheet and :frames keys"],"~:-render",["^ ","^5","^H","^M",["^N",[["^F","^G","^I"]]],"^O","Draw state changes to the sprite"]],"^O","The Renderer protocol deals with loading and rendering sprites. The render function\n   is meant to draw meaningful changes to the sprite on some display. \n   \n   The meaning of \"load\" may vary from renderer to renderer. However,\n   loading should be responsible for setting the initial state of the sprite, especially\n   where dimensions and the finite frame set are concerned. It is expected\n   that the load function sets state for the sprites :sprite-sheet and :frames keys while transitioning\n   to a :lemon.lime/loaded state.","~:jsdoc",["^N",["@interface"]]],"^>",true,"^5","~$lemon.lime.protocols/Renderer","^?","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","^@",22,"^A",1,"^B",3,"^C",["^ ","^D",["^ ","^E",[["^F","^G"]],"^H",[["^F","^G","^I"]]]],"~:info",null,"^J",3,"~:tag","~$any","^K",["^ ","^L",["^ ","^5","^E","^M",["^N",[["^F","^G"]]],"^O","Load the sprite and put it into a :lemon.lime/loaded state. Sets :sprite-sheet and :frames keys"],"^P",["^ ","^5","^H","^M",["^N",[["^F","^G","^I"]]],"^O","Draw state changes to the sprite"]],"~:impls",["^4",[]],"^O","The Renderer protocol deals with loading and rendering sprites. The render function\n   is meant to draw meaningful changes to the sprite on some display. \n   \n   The meaning of \"load\" may vary from renderer to renderer. However,\n   loading should be responsible for setting the initial state of the sprite, especially\n   where dimensions and the finite frame set are concerned. It is expected\n   that the load function sets state for the sprites :sprite-sheet and :frames keys while transitioning\n   to a :lemon.lime/loaded state.","^Q",["^N",["@interface"]]],"^E",["^ ","~:protocol-inline",null,"^=",["^ ","^?","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","^B",12,"^A",4,"^J",12,"^@",9,"~:protocol","^R","^O","Load the sprite and put it into a :lemon.lime/loaded state. Sets :sprite-sheet and :frames keys","^M",["^N",["~$quote",["^N",[["^F","^G"]]]]]],"^X","^R","^5","~$lemon.lime.protocols/-load","^?","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","^@",9,"~:method-params",["^N",[["^F","^G"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^A",1,"~:variadic?",false,"^B",3,"~:ret-tag","^U","^J",12,"~:max-fixed-arity",2,"~:fn-var",true,"^M",["^N",["^Y",["^N",[["^F","^G"]]]]],"^O","Load the sprite and put it into a :lemon.lime/loaded state. Sets :sprite-sheet and :frames keys"],"^H",["^ ","^W",null,"^=",["^ ","^?","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","^B",13,"^A",4,"^J",13,"^@",11,"^X","^R","^O","Draw state changes to the sprite","^M",["^N",["^Y",["^N",[["^F","^G","^I"]]]]]],"^X","^R","^5","~$lemon.lime.protocols/-render","^?","/Users/brian/projects/lemon-lime/src/lemon/lime/protocols.cljs","^@",11,"^[",["^N",[["^F","^G","^I"]]],"^10",null,"^11",["^N",[null,null]],"^A",1,"^12",false,"^B",3,"^13","^U","^J",13,"^14",3,"^15",true,"^M",["^N",["^Y",["^N",[["^F","^G","^I"]]]]],"^O","Draw state changes to the sprite"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^O",null]