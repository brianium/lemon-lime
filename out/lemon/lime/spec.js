// Compiled by ClojureScript 1.11.4 {:static-fns true, :optimize-constants true, :optimizations :advanced}
goog.provide('lemon.lime.spec');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.spec.alpha');
goog.require('fsm.protocols');
goog.require('lemon.lime.impl');
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$sym$cljs$core_SLASH_nat_DASH_int_QMARK_,cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$sym$cljs$core_SLASH_nat_DASH_int_QMARK_,cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_dimensions,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__587){
return cljs.core.map_QMARK_(G__587);
}),(function (G__587){
return cljs.core.contains_QMARK_(G__587,cljs.core.cst$kw$width);
}),(function (G__587){
return cljs.core.contains_QMARK_(G__587,cljs.core.cst$kw$height);
})], null),(function (G__587){
return ((cljs.core.map_QMARK_(G__587)) && (((cljs.core.contains_QMARK_(G__587,cljs.core.cst$kw$width)) && (cljs.core.contains_QMARK_(G__587,cljs.core.cst$kw$height)))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$width,cljs.core.cst$kw$height], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$width)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$height))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_x,cljs.core.cst$sym$cljs$core_SLASH_nat_DASH_int_QMARK_,cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_y,cljs.core.cst$sym$cljs$core_SLASH_nat_DASH_int_QMARK_,cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_point,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$lemon$lime$spec_SLASH_x,cljs.core.cst$kw$lemon$lime$spec_SLASH_y),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_x,cljs.core.cst$kw$lemon$lime$spec_SLASH_y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_x,cljs.core.cst$kw$lemon$lime$spec_SLASH_y], null)));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_frame,cljs.core.cst$kw$lemon$lime$spec_SLASH_point,cljs.core.cst$kw$lemon$lime$spec_SLASH_point);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_frames,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$lemon$lime$spec_SLASH_point),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$lemon$lime$spec_SLASH_point,cljs.core.cst$kw$lemon$lime$spec_SLASH_point,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,null,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__588){
return cljs.core.coll_QMARK_(G__588);
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$lemon$lime$spec_SLASH_point)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite_DASH_sheet,cljs.core.cst$kw$lemon$lime$spec_SLASH_dimensions,cljs.core.cst$kw$lemon$lime$spec_SLASH_dimensions);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_renderer,cljs.core.cst$sym$lemon$lime$impl_SLASH_renderer_QMARK_,lemon.lime.impl.renderer_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_frame,cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite_DASH_sheet], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_frame,cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite_DASH_sheet], null),null,null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__589){
return cljs.core.map_QMARK_(G__589);
}),(function (G__589){
return cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$uri);
}),(function (G__589){
return cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$frame);
}),(function (G__589){
return cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$width);
}),(function (G__589){
return cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$height);
}),(function (G__589){
return cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$sprite_DASH_sheet);
})], null),(function (G__589){
return ((cljs.core.map_QMARK_(G__589)) && (((cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$uri)) && (((cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$frame)) && (((cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$width)) && (((cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$height)) && (cljs.core.contains_QMARK_(G__589,cljs.core.cst$kw$sprite_DASH_sheet)))))))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_frame,cljs.core.cst$kw$lemon$lime$spec_SLASH_width,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite_DASH_sheet], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$uri,cljs.core.cst$kw$frame,cljs.core.cst$kw$width,cljs.core.cst$kw$height,cljs.core.cst$kw$sprite_DASH_sheet], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$uri)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$frame)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$width)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$height)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$sprite_DASH_sheet))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_state_DASH_machine,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_satisfies_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$sym$fsm$protocols_SLASH_StateMachine)),(function (p1__590_SHARP_){
if((!((fsm.protocols.StateMachine == null)))){
if(((false) || ((cljs.core.PROTOCOL_SENTINEL === fsm.protocols.StateMachine.lemon$lime$spec$p1__590_SHARP_$)))){
return true;
} else {
if((!fsm.protocols.StateMachine.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(p1__590_SHARP_,fsm.protocols.StateMachine);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(p1__590_SHARP_,fsm.protocols.StateMachine);
}
}));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$lemon$lime$spec_SLASH_state_DASH_machine,cljs.core.cst$kw$lemon$lime$spec_SLASH_renderer),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_state_DASH_machine,cljs.core.cst$kw$lemon$lime$spec_SLASH_renderer], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_state_DASH_machine,cljs.core.cst$kw$lemon$lime$spec_SLASH_renderer], null)));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_effect_DASH_handler,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_fspec,cljs.core.cst$kw$args,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.cst$kw$old,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$new,cljs.core.cst$kw$lemon$lime$spec_SLASH_state),cljs.core.cst$kw$ret,cljs.core.cst$sym$cljs$core_SLASH_any_QMARK_),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.cst$kw$old,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$new,cljs.core.cst$kw$lemon$lime$spec_SLASH_state),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$sprite,cljs.core.cst$kw$old,cljs.core.cst$kw$new], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$lemon$lime$spec_SLASH_state], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$lemon$lime$spec_SLASH_state], null)),null,null),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite,cljs.core.cst$kw$old,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$new,cljs.core.cst$kw$lemon$lime$spec_SLASH_state),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$cljs$core_SLASH_any_QMARK_,cljs.core.any_QMARK_,null,null),cljs.core.cst$sym$cljs$core_SLASH_any_QMARK_,null,null,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_payload_DASH_fn,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_fspec,cljs.core.cst$kw$args,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite),cljs.core.cst$kw$ret,cljs.core.cst$kw$lemon$lime$spec_SLASH_state),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$sprite], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite], null)),null,null),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_cat,cljs.core.cst$kw$sprite,cljs.core.cst$kw$lemon$lime$spec_SLASH_sprite),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$lemon$lime$spec_SLASH_state,cljs.core.cst$kw$lemon$lime$spec_SLASH_state,null,null),cljs.core.cst$kw$lemon$lime$spec_SLASH_state,null,null,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_event_DASH_payload,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$map,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$fn,cljs.core.cst$kw$lemon$lime$spec_SLASH_payload_DASH_fn),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$map,cljs.core.cst$kw$fn], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$lemon$lime$spec_SLASH_payload_DASH_fn], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map_QMARK_,cljs.core.cst$kw$lemon$lime$spec_SLASH_payload_DASH_fn], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$lemon$lime$spec_SLASH_config,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_width], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_width], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__592){
return cljs.core.map_QMARK_(G__592);
}),(function (G__592){
return cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$uri);
}),(function (G__592){
return cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$height);
}),(function (G__592){
return cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$width);
})], null),(function (G__592){
return ((cljs.core.map_QMARK_(G__592)) && (((cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$uri)) && (((cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$height)) && (cljs.core.contains_QMARK_(G__592,cljs.core.cst$kw$width)))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$lemon$lime$spec_SLASH_uri,cljs.core.cst$kw$lemon$lime$spec_SLASH_height,cljs.core.cst$kw$lemon$lime$spec_SLASH_width], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$uri,cljs.core.cst$kw$height,cljs.core.cst$kw$width], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$uri)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$height)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$width))], null),null])));
